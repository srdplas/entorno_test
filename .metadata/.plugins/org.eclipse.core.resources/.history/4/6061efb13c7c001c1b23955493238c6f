package entorno.yuri.tarea3;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

class ShoppingCartTest {
	
	private static ShoppingCart sh;
	private static Product p,o;
	
	@BeforeAll
	
	static void init() {
		sh = new ShoppingCart();
		p = new Product("Pato", 21.6);
	}
	
	
	@AfterAll
	static void finish() {
		sh=null;
	}
	
	@Test
	void testShoppingCart(){
	// 1. El carrito est� vacio cuando se crea
		ShoppingCart sh = new ShoppingCart();
		assertEquals(0, sh.getItemCount(), "Error en el resultado esperado");
	}

	@Test
	void testGetBalance(){
		//4. Balance del carrito devuelve la suma de los precios de los items que haya en el carro
		ShoppingCart sh = new ShoppingCart();
		Product p = new Product("Pato", 21.6);
		Product o = new Product("Oso", 34.6);
		sh.addItem(o);
		sh.addItem(p);
		assertEquals(56.2, sh.getBalance(), "Error en el resultado esperado");
		
	}

	@Test
	void testAddItem(){
		//3. Se incrementa la cuenta de items al añadir un item al carrito
		ShoppingCart sh = new ShoppingCart();
		Product p = new Product("Oso", 34.6);
		sh.addItem(p);
		assertEquals(1, sh.getItemCount(), "Error en el resultado esperado");
	}

	@Test
	void testRemoveItem(){
		
		//5. Al quitar un item del carrito la cuenta de items debe decrementarse
		ShoppingCart sh = new ShoppingCart();
		Product p = new Product("Oso", 34.6);
		Product o = new Product("Oso", 34.6);
		sh.addItem(p);
		//6. Agregar un try y metodo fail cuando se intenta quitar un item que no estaba en el carro
		try {
		sh.removeItem(o);
		sh.removeItem(p);
		
		
		} catch (ProductNotFoundException e) {
			
		}
		assertEquals(0, sh.getItemCount(), "Error resultado no esperado");
	}

	@Test
	void testGetItemCount(){
		ShoppingCart sh = new ShoppingCart();
	}

	@Test
	void testEmpty(){
		//2. Carrito 0 items al vaciarlo
		ShoppingCart sh = new ShoppingCart();
		Product p = new Product("Oso", 34.6);
		sh.addItem(p);
		sh.empty();
		assertEquals(0, sh.getItemCount(), "Error en el resultado esperado");
	}

}
